---
import Pbuttons from "../globalcomponents/font-size: 20px;.astro";
---

<section class="grid">
  <div class="backgroundimg"></div>
  <div class="textcontainer">
    <h1 class="gsaptest">
      Bliv
      <span>Plastic Changer</span> Dit bidrag til fremtidens <span>klima</span>
    </h1>
    <p>
      Dyk ned i rejsen mod bæredygtighed og opdag, hvorfor din rolle som Plastic
      Changer er afgørende for at skabe et positivt miljøaftryk og forandre
      vores forhold til plastik. Er du klar til at tage skridtet mod en grønnere
      og mere ansvarlig fremtid?
    </p>
    <a class="no-style" href="/forms">
      <Pbuttons title="Støt nu" size="large" />
    </a>
  </div>
</section>

<style>
  .grid {
    display: grid;
    grid-template-columns: 3fr 2fr;
    background: var(--color-complimentary-pine-green-lightest, #d3e2e2);
  }

  .backgroundimg {
    grid-column: 1 / 2; /* Ensuring background image is in the first column */
    background-image: url("src/asset/svgimages/HeroBackground.svg");
    background-size: cover; /* Cover the available space */
    background-position: left; /* Align the bottom of the image */
    background-repeat: no-repeat;
    max-width: 100%;
  }

  .textcontainer {
    grid-column: 2 / 3; /* Ensuring text content is in the second column */
    padding: var(--spacing-section-padding-horzontal, 128px)
      var(--spacing-section-padding-vertical, 80px);
  }

  h1,
  p,
  Pbuttons {
    margin-bottom: var(--spacing-text-gap-vertical, 32px);
  }

  h1 {
    color: var(--text-header-1-color-pine-green-dark, #142c2b);
    font-family: Poppins;
    font-size: clamp(32px, 4vw, 48px);
    font-weight: 300;
  }

  span {
    font-weight: 700;
  }

  p {
    color: var(--text-paragraph-color-pine-green-medium, #2a5f5e);
    font-family: Rubik;
    font-size: clamp(16px, 2vw, 20px); /* Adjusts between 16px and 20px */
    line-height: 150.5%;
  }

  .no-style {
    list-style: none;
    text-decoration: none;
    text-decoration-line: none;
  }
  @media (max-width: 1300px) {
    .grid {
      grid-template-columns: 1fr; /* Stack elements on smaller screens */
    }

    .backgroundimg {
      grid-column: 1; /* Adjust column for background image */
      min-height: 400px; /* Set a minimum height for visibility */
      background-image: url("src/asset/svgimages/mobielBG.svg");
      background-position: bottom; /* Align the bottom of the image */
    }

    .textcontainer {
      grid-column: 1;
      padding: var(--spacing-section-padding-horzontal, 32px)
        var(--spacing-section-padding-vertical, 20px);
      padding-top: 0;
    }
  }

  /* ------- all from animista ------- */
  .swing-top-right-bck {
    -webkit-animation: swing-top-right-bck 0.4s
      cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
    animation: swing-top-right-bck 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)
      both;
  }

  /* ----------------------------------------------
 * Generated by Animista on 2023-12-14 14:37:50
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

  /**
 * ----------------------------------------
 * animation swing-top-right-bck
 * ----------------------------------------
 */
  @-webkit-keyframes swing-top-right-bck {
    0% {
      -webkit-transform: rotate3d(1, 1, 0, 0deg);
      transform: rotate3d(1, 1, 0, 0deg);
      -webkit-transform-origin: 100% 0%;
      transform-origin: 100% 0%;
    }
    100% {
      -webkit-transform: rotate3d(1, 1, 0, -180deg);
      transform: rotate3d(1, 1, 0, -180deg);
      -webkit-transform-origin: 100% 0%;
      transform-origin: 100% 0%;
    }
  }
  @keyframes swing-top-right-bck {
    0% {
      -webkit-transform: rotate3d(1, 1, 0, 0deg);
      transform: rotate3d(1, 1, 0, 0deg);
      -webkit-transform-origin: 100% 0%;
      transform-origin: 100% 0%;
    }
    100% {
      -webkit-transform: rotate3d(1, 1, 0, -180deg);
      transform: rotate3d(1, 1, 0, -180deg);
      -webkit-transform-origin: 100% 0%;
      transform-origin: 100% 0%;
    }
  }
</style>
<script>
  import { gsap } from "gsap";

  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  gsap.to(".gsaptest", {
    color: "#76EE00",
    duration: 6,
    scrollTrigger: "h1",
  });

  gsap.to(".backgroundimg", {
    scrollTrigger: {
      trigger: ".backgroundimg",
      start: "center center",
      toggleClass: "swing-top-right-bck",
    },
  });
</script>
